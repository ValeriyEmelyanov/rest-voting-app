DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE menu_items IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE votes IF EXISTS;

CREATE TABLE users
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY,
    name          VARCHAR(255)            NOT NULL,
    email         VARCHAR(255)            NOT NULL,
    encrypted_password VARCHAR(255)       NOT NULL,
    registered    TIMESTAMP DEFAULT now() NOT NULL,
    enabled       BOOLEAN DEFAULT TRUE    NOT NULL,
    CONSTRAINT user_email_idx UNIQUE (email)
);

CREATE TABLE user_roles
(
    user_id       INTEGER NOT NULL,
    role          VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) PRIMARY KEY,
    name          VARCHAR(255)            NOT NULL,
    active        BOOLEAN DEFAULT TRUE    NOT NULL,
    CONSTRAINT restaurant_name_idx UNIQUE (name)
);

CREATE TABLE menus
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    restaurant_id INTEGER   NOT NULL,
    date          TIMESTAMP NOT NULL,
    CONSTRAINT menu_restaurant_date_idx UNIQUE (restaurant_id, date),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE TABLE menu_items
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    menu_id       INTEGER                 NOT NULL,
    dish          VARCHAR(255)            NOT NULL,
    price         DECIMAL(12, 2),
    CONSTRAINT menu_dish_idx UNIQUE (menu_id, dish),
    FOREIGN KEY (menu_id) REFERENCES menus (id) ON DELETE CASCADE
);

CREATE TABLE votes
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    user_id       INTEGER,
    menu_id       INTEGER,
    restaurant_id INTEGER                 NOT NULL,
    date          TIMESTAMP               NOT NULL,
    CONSTRAINT vote_user_date_idx UNIQUE (user_id, date),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE SET NULL,
    FOREIGN KEY (menu_id) REFERENCES menus (id) ON DELETE SET NULL ,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
)